version: '3.8'

services:
  # PostgreSQL сервис для бэкенда
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - backend

  # Бэкенд сервис (Django + микросервисы)
  auth_microservice:
    build:
      context: .
      dockerfile: ./server/auth_microservice/Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./server/auth_microservice:/app
    environment:
      - DB_HOST=db
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - backend

  match_microservice:
    build:
      context: .
      dockerfile: ./server/match_microservice/Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8001"
    volumes:
      - ./server/match_microservice:/app
    environment:
      - DB_HOST=db
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    depends_on:
      - db
    ports:
      - "8001:8001"
    networks:
      - backend

  # Фронтенд сервис (React + Nginx)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - frontend

volumes:
  postgres_data:

networks:
  frontend:
  backend:
